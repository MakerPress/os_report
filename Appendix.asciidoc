:bookseries: radar

== Appendix

==== Open Source Cost Differential Model
//rm 2012-07-08 I'm inconsistent w/ Ben's using (1), (2), (3) for variables, whil I use the short variable names; my model has more pieces and I think the short variable names work better.

The assumptions, methodology and equations used to build the Open Source Cost Differential model

Assumptions used to build the model

* Amazon EC2 pricing provides a reasonable proxy for the difference between Open Source and commercial software infrastructure, i.e., operating systems and databases

* Amazon is equally adept at negotiating with their Open Source and commercial providers

* We chose specific pricing options that reflect typical choices for SMB customers, knowing that there is no typical SMBs and that their online needs vary widely:

** One-year term

** “Medium Utilization Reserved Instances” - providing a reserved instance and balancing upfront costs with lower hourly costs for a 1 yr term

** Average of Small (Default) and Medium pricing within the “Medium Utilization” tier

*** The price differential between Open Source and commercial instances drops as usage/volume rises; these changes have a small effect on the model

** To calculate the cost differential, we allocate upfront costs by month and assume hourly fees for 18 hours of usage per day in a month

** EC2 pricing includes the hardware, system administration, network, HVAC, real estate and other costs required to run a network connected server instance

* Database pricing

** MySQL is included with the Linux option pricing

** Three combinations of usage and price options are offered for SQL Server

*** SQL Server Express - free for up to 10 Gb

*** SQL Server (Web) - for work loads typical of web sites running a CMS

*** SQL Server (Full) - full access loads and function typical of transaction systems like ecommerce and finance apps

** Ecommerce systems require full database access

** CMS systems require web database access

** The mix of Bluehost business customers use of ecommerce apps, CMS apps and simple web presence represents a reasonable proxy for the US SMB market:

*** 7.4% have an ecommerce system (all have a web presence, many have CMS)

*** 70% use a CMS to manage content, but no ecommerce system

*** 23% have a web presence only, i.e., no ecommerce or CMS instances

** Many SMBs generate low data volumes, we assume:

*** 50% of SMBs with an ecommerce have small enough data volumes to use free SQL Server Express

*** 50% of SMBs with a CMS have small enough data volumes to use free SQL Server Express

Our model combines the usage patterns based on the Bluehost SMB business user data with the price differentials between the various options to determine an overall open source / commercial price differential.

// the indents are intended for guidance on what to indent in the formatted doc
    Adjusted ecommerce share (adj_ecomm):
        7.4% of SMBs w/ ecommerce * 50% of SMBs too big for free comm’l database: 3.7%
    Adjusted CMS share (adj_cms):
        70% of SMBs w/ CMS * 50% of SMBs too big for free comm’l database: 35%
    Web Presence (web_pres):
        100% of SMB customers less adjusted ecommerce share (3.7%) less adjusted CMS share (35%): 61%

    General price differential formula:
        price
            *components*:
            upfront price per month (upfront_price_mo)= upfront_price / 12
            hourly rate per month (hr_price_mo) = hourly_rate * 18 hrs/day * 30 days
            upfront_share = upfront_price_mo / (upfront_price_mo + hr_price_mo)
         price = upfront_price_mo * upfront_share + hr_price_mo * (1 - upfront_share)

        price differential = 1 + ( (avg(windows_price) - avg(linux_price) / avg(linux_price)

    Full access database price differential (fulldb_diff): 9.83
    Web access database price differential (webdb_diff): 2.15
    No database price differential (nodb_diff): 1.57

    Formula
    (adj_ecomm * fulldb_diff) + (adj_cms * webdb_diff) + (web_pres * nodb_diff) = 
    (2.7% * 9.83) + (35% * 2.15) + (61% * 1.57) = 2.05

